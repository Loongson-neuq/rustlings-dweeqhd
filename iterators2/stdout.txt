Checking test execution result...
[!] Test execution result: FAILED
Checking source code format...
  Preparing source code for format check...
  Running format check...
// =====================================================
//  Running cargo fmt...
// =====================================================

error: expected expression, found `?`
  --> /home/runner/work/rustlings-dweeqhd/rustlings-dweeqhd/format_check/src/main.rs:18:24
   |
18 |         Some(first) => ???,
   |                     -- ^ expected expression
   |                     |
   |                     while parsing the `match` arm starting here


// =====================================================
//    Running cargo clippy...
// =====================================================

    Checking format_check v0.1.0 (/home/runner/work/rustlings-dweeqhd/rustlings-dweeqhd/format_check)
error: expected expression, found `?`
  --> src/main.rs:18:24
   |
18 |         Some(first) => ???,
   |                     -- ^ expected expression
   |                     |
   |                     while parsing the `match` arm starting here

error[E0601]: `main` function not found in crate `format_check`
  --> src/main.rs:63:2
   |
63 | }
   |  ^ consider adding a `main` function to `src/main.rs`

warning: unused variable: `words`
  --> src/main.rs:26:32
   |
26 | pub fn capitalize_words_vector(words: &[&str]) -> Vec<String> {
   |                                ^^^^^ help: if this is intentional, prefix it with an underscore: `_words`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `words`
  --> src/main.rs:34:32
   |
34 | pub fn capitalize_words_string(words: &[&str]) -> String {
   |                                ^^^^^ help: if this is intentional, prefix it with an underscore: `_words`

For more information about this error, try `rustc --explain E0601`.
warning: `format_check` (bin "format_check") generated 2 warnings
error: could not compile `format_check` (bin "format_check") due to 2 previous errors; 2 warnings emitted

[!] Source code format check: FAILED
